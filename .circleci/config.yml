version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:16
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Verify syntax
          command: npm run lint
      - run:
          name: Set user
          command: |
            git config --global user.name a1vy &&
            git config --global user.email a01101100vy@gmail.com
      - run:
          name: Clone main branch
          command: git clone -b main --single-branch $CIRCLE_REPOSITORY_URL docs
      - run:
          name: Clean everything
          command: |
            cd docs &&
            ls -a | grep -v .git | grep -v .circleci | egrep -vU "\.$" | xargs rm -rf &&
            cd -
      - run:
          name: Set NPM tokens
          command: echo -e $NPMRC > ~/.npmrc
      - run:
          name: Publish cli
          command: npx published --latest-branch build
      - run:
          name: Create page
          command: npm run build
      - run:
          name: List files
          command: ls docs
      - run:
          name: Get mono
          command: git clone git@github.com:omrilotan/mono.git
      - run:
          name: Create sitemap
          command: node ./mono/scripts/sitemap.js --base "https://omrilotan.com" > ./docs/sitemap.xml
      - run:
          name: Check for changes
          command: |
            cd docs &&
            git diff --exit-code && circleci step halt
            cd -
      - run:
          name: Commit
          command: |
            cd docs &&
            git add . &&
            git commit -m "$(curl -s whatthecommit.com/index.txt)" &&
            git push origin main --force-with-lease &&
            cd -
      - run:
          name: CloufFlare - Purge everything
          command: |
            curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${CF_ZONE}/purge_cache" \
             -H "X-Auth-Email: ${CF_EMAIL}" \
             -H "X-Auth-Key: ${CF_API_KEY}" \
             -H "Content-Type: application/json" \
             --data '{"purge_everything":true}'
workflows:
  version: 2
  website:
    jobs:
      - build:
          context: globalenv
          filters:
            branches:
              only:
                - build
